def minDistance(self, word1: str, word2: str) -> int:    #io23689
    m, n = len(word1), len(word2)    #op23692
    dp = [[0] * (n + 1) for _ in range(m + 1)]    #op23694
    for i in range(1, m + 1):    #cond23699
        dp[i][0] = i    #op23706
    for j in range(1, n + 1):    #cond23713
        dp[0][j] = j    #op23720
    for i in range(1, m + 1):    #cond23727
        for j in range(1, n + 1):    #cond23769
            if word1[i - 1] == word2[j - 1]:    #cond23787
                dp[i][j] = dp[i - 1][j - 1]    #op23791
            else:    #None
                dp[i][j] = min(dp[i - 1][j], dp[i][j - 1]) + 1    #op23795
    return dp[m][n]    #io23805
