op3=>operation: 下标j减去1
cond922=>condition: s中下标为i的字符等于t中下标为j的字符
st822=>start: start numDistinct
op859=>operation: 定义元素i为dp第1维的下标
cond830=>condition: s的长度小于t的长度
op901=>operation: 定义元素j为dp第2维的下标
op926=>operation: s[i:]的子序列中t[j:]出现的个数等于dp[i-1][j-1]和dp[i][j-1]的和
op845=>operation: 初始化全零矩阵第1维下标i等于0
cond862=>condition: dp第1维的下标大于-1
io824=>inputoutput: input: self, s, t
e938=>end: end function return
cond848=>condition: 全零矩阵第1维下标没有越界
op2=>operation: 下标i减去1
cond904=>condition: dp第2维的下标大于-1
op843=>operation: 初始化dp为的全零矩阵，第一维长度等于s的长度加1，第二维长度等于t的长度加1。其中dp[i][j]表示在s[i:]的子序列中t[j:]出现的个数。
io940=>inputoutput: output:  返回在s的子序列中t出现的个数。
op930=>operation: s[i:]的子序列中t[j:]出现的个数等于dp[i + 1][j]
op827=>operation: 初始化s,t的长度分别为m,n
op1=>operation: 全零矩阵第1维下标加一
io837=>inputoutput: output:  s的子序列中t出现的个数为0
op855=>operation: 在s[i:]的子序列中t[n:]出现的个数等于1
e835=>end: end function return

op1->cond848
io824->op827
cond904(yes)->cond922
op930->op3
cond904(no)->op2
op859->cond862
op845->cond848
st822->io824
cond848(yes)->op855
io940->e938
cond922(yes)->op926
op2->cond862
op843->op845
op926->op3
cond830(yes)->io837
op827->cond830
cond922(no)->op930
op901->cond904
cond848(no)->op859
cond862(yes)->op901
op3->cond904
cond862(no)->io940
op855->op1
cond830(no)->op843
io837->e835
