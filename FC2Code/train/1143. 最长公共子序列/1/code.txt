def longestCommonSubsequence(self, text1: str, text2: str) -> int:
    m, n = len(text1), len(text2)
    dp = [[0] * (n + 1) for _ in range(m + 1)]
    for t1 in range(1, m + 1):
        for t2 in range(1, n + 1):
            if text1[t1 - 1] == text2[t2 - 1]:
                dp[t1][t2] = dp[t1 - 1][t2 - 1] + 1
            else:
                dp[t1][t2] = max(dp[t1 - 1][t2], dp[t1][t2 - 1])
    return dp[m][n]
