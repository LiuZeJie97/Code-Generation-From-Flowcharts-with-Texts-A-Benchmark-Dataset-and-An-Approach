op26575=>operation: i为横坐标，l为二维数组grid中当前横坐标对应的数组
cond26800=>condition: 对该数组进行遍历
op2=>operation: 更新纵坐标及其对应的元素
st26568=>start: start maxAreaOfIsland
op26909=>operation: 定义栈stack，将位置坐标(i,j)入栈
e27014=>end: end function return
op26797=>operation: j为纵坐标，n为数组l中当前纵坐标对应的元素
op26985=>operation: 数组grid中cur_i行cur_j列处的元素等于0
op1=>operation: 更新横坐标及其对应的数组
cond26990=>condition: (di,dj)的取值分别为(0,1),(0,-1),(1,0),(-1,0)
op26961=>operation: 定义cur_i等于栈顶元素的横坐标，表示现在的横坐标，定义cur_j等于栈顶元素的纵坐标表示现在的纵坐标，并将栈顶元素出栈
cond26974=>condition: 如果数组grid中cur_i行cur_j列处的元素不为1
op27001=>operation: 将现在的横坐标、纵坐标组成的位置坐标入栈
op26987=>operation: di为横坐标方向向量，dj为纵坐标方向向量，(di,dj)表示方向向量
cond26578=>condition: 对该二维数组进行遍历
op26573=>operation: 定义变量ans等于0，用于记录最大岛屿面积
op27007=>operation: 若最大岛屿面积小于现在的岛屿面积，则将最大岛屿面积更新为现在的岛屿面积
op26983=>operation: 现在的岛屿面积加一
io26570=>inputoutput: input: self, grid
cond26912=>condition: 当栈不为空
cond26964=>condition: 如果现在的横坐标小于0或现在的纵坐标小于0或现在的横坐标等于数组grid的行数或现在的纵坐标等于数组grid的列数
op26907=>operation: 定义变量cur记录现在的岛屿面积，初值为0
op26999=>operation: 定义下一步横坐标next_i等于现在的横坐标加当前横坐标方向向量，下一步纵坐标next_j等于现在的纵坐标加当前纵坐标方向向量
io27016=>inputoutput: output:  返回最大岛屿面积

op26907->op26909
st26568->io26570
op26987->cond26990
cond26800(yes)->op26907
op26797->cond26800
op26983->op26985
op26985->op26987
cond26974(yes)->cond26912
op27007->op2
cond26578(no)->io27016
op2->cond26800
cond26912(no)->op27007
io27016->e27014
op26575->cond26578
op26909->cond26912
cond26578(yes)->op26797
op26573->op26575
cond26990(yes)->op26999
op26999->op27001
op26961->cond26964
op27001->cond26990
cond26800(no)->op1
io26570->op26573
cond26974(no)->op26983
cond26964(no)->cond26974
cond26964(yes)->cond26912
cond26912(yes)->op26961
cond26990(no)->cond26912
op1->cond26578
