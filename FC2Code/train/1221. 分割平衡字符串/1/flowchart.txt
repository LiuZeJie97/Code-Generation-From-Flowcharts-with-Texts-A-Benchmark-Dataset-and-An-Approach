op8749=>operation: 平衡字符串的最大数量加一
op1=>operation: 将当前字符顺序更新为字符串中的下一个未访问字符
st8677=>start: start balancedStringSplit
io8679=>inputoutput: input: self, s
cond8689=>condition: 字符串中还有字符未被访问
op8738=>operation: L与R的数量差减一
op8684=>operation: d等于0，用于记录L与R的数量差
io8759=>inputoutput: output:  返回平衡字符串的最大数量
op8682=>operation: cnt等于0，用于记录平衡字符串的最大数量
cond8734=>condition: 当前字符是R
cond8745=>condition: L与R的数量差为0
cond8725=>condition: 当前字符是L
op8729=>operation: L与R的数量差加一
e8757=>end: end function return
op8686=>operation: 字符a用于访问字符串s，初值为该字符串中第一个字符

cond8689(no)->io8759
io8679->op8682
op8729->cond8745
st8677->io8679
cond8745(yes)->op8749
op8684->op8686
op8682->op8684
io8759->e8757
cond8725(yes)->op8729
op8749->op1
op8686->cond8689
op1->cond8689
op8738->cond8745
cond8745(no)->op1
cond8689(yes)->cond8725
cond8734(no)->cond8745
cond8725(no)->cond8734
cond8734(yes)->op8738
