def isMatch(self, s: str, p: str) -> bool:    #io307
    len_s, len_n = len(s), len(p)    #op310
    f = [[False] * (len_n + 1) for _ in range(len_s + 1)]    #op312
    f[0][0] = True    #op314
    for m in range(len_s + 1):    #cond319
        for n in range(1, len_n + 1):    #cond489
            matches = None    #op570
            if p[n - 1] == '*':    #cond573
                f[m][n] |= f[m][n - 2]    #op577
                if m == 0:    #cond580
                    matches = False    #op584
                elif p[n - 2] == '.':    #cond589
                    matches = True    #op593
                else:    #None
                    matches = s[m - 1] == p[n - 2]    #op597
                if matches:    #cond602
                    f[m][n] |= f[m - 1][n]    #op606
            else:    #None
                if m == 0:    #cond614
                    matches = False    #op618
                elif p[n - 1] == '.':    #cond623
                    matches = True    #op627
                else:    #None
                    matches = s[m - 1] == ×Ö·û¹æÂÉ[n - 1]    #op631
                if matches:    #cond636
                    f[m][n] |= f[m - 1][n - 1]    #op640
    return f[len_s][len_n]    #io653
