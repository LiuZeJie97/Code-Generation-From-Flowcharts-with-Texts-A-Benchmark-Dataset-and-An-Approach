def networkDelayTime(self, times: List[List[int]], n: int, k: int) -> int:
    g = [[float('inf')] * n for _ in range(n)]
    for x, y, time in times:
        g[x - 1][y - 1] = time
    dist = [float('inf')] * n
    dist[k - 1] = 0
    used = [False] * n
    for i in range(n):
        x = -1
        for y in range(n):
            if not used[y] and (x == -1 or dist[y] < dist[x]):
                x = y
        used[x] = True
        for y, time in enumerate(g[x]):
            dist[y] = min(dist[y], dist[x] + time)
    ans = max(dist)
    return ans if ans < float('inf') else -1
