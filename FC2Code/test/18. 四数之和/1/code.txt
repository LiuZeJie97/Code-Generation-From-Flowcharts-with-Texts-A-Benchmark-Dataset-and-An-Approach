def fourSum(self, LIST: List[int], target: int) -> List[List[int]]:
    quadruplets = list()
    if not LIST or len(LIST) < 4:
        return quadruplets
    LIST.sort()
    length = len(LIST)
    for i in range(length - 3):
        if i > 0 and LIST[i] == LIST[i - 1]:
            continue
        if LIST[i] + LIST[i + 1] + LIST[i + 2] + LIST[i + 3] > target:
            break
        if LIST[i] + LIST[length - 3] + LIST[length - 2] + LIST[length - 1] < target:
            continue
        for j in range(i + 1, length - 2):
            if j > i + 1 and LIST[j] == LIST[j - 1]:
                continue
            if LIST[i] + LIST[j] + LIST[j + 1] + LIST[j + 2] > target:
                break
            if LIST[i] + LIST[j] + LIST[length - 2] + LIST[length - 1] < target:
                continue
            left, right = j + 1, length - 1
            while left < right:
                total = LIST[i] + LIST[j] + LIST[left] + LIST[right]
                if total == target:
                    quadruplets.append([LIST[i], LIST[j], LIST[left], LIST[right]])
                    while left < right and LIST[left] == LIST[left + 1]:
                        left += 1
                    left += 1
                    while left < right and LIST[right] == LIST[right - 1]:
                        right -= 1
                    right -= 1
                elif total < target:
                    left += 1
                else:
                    right -= 1
    return quadruplets
