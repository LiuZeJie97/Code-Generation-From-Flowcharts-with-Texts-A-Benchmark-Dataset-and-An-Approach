def minDistance(self, word1: str, word2: str) -> int:    #io6120
    n = len(word1)    #op6123
    m = len(word2)    #op6123
    if n * m == 0:    #cond6126
        return n + m    #io6133
    D = [ [0] * (m + 1) for _ in range(n + 1)]    #op6139
    for i in range(n + 1):    #cond6144
        D[i][0] = i    #op6151
    for j in range(m + 1):    #cond6158
        D[0][j] = j    #op6165
    for i in range(1, n + 1):    #cond6172
        for j in range(1, m + 1):    #cond6226
            left = D[i - 1][j] + 1    #op6249
            down = D[i][j - 1] + 1    #op6251
            left_down = D[i - 1][j - 1]    #op6253
            if word1[i - 1] != word2[j - 1]:    #cond6256
                left_down += 1    #op6260
            D[i][j] = min(left, down, left_down)    #op6265
    return D[n][m]    #io6274
