def minTaps(self, n: int, ranges: List[int]) -> int:    #io11081
    prev = []    #op11084
    for i in range(n + 1):    #cond11089
        prev.append(i)    #op11096
    for i in range(n + 1):    #cond11103
        l = max(i - ranges[i], 0)    #op11114
        r = min(i + ranges[i], n)    #op11116
        prev[r] = min(prev[r], l)    #op11118
    BIG = 2**30    #op11122
    dp = [BIG] * (n + 1)    #op11124
    dp[0] = 0    #op11126
    for i in range(1, n + 1):    #cond11131
        for j in range(prev[i], i):    #cond11169
            if dp[j] != BIG:    #cond11185
                dp[i] = min(dp[i], dp[j] + 1)    #op11189
    return dp[n] if dp[n] != BIG else -1    #io11201
