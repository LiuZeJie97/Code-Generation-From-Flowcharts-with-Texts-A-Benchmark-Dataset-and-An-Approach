def minCut(self, s):
    初始化最小分割次数数组min_cut={0,1,2, ,n1}，长度为字符串s的长度。其中min_cut[i]表示s[0, ,i]的最小分割次数。初始化的含义为，s[0]只有一个字符，不需要分割，因此min_cut[0]=0，s[0,1]最多需要1次，分成两个单独的字符。s[0,1,2]需要三次。以此类推。
    字符串s的长度为n。
    初始化dp=[[False, ,False], ,[False, ,False]],为nn维数组。其中dp[i][j]表示字符串s[i, ,j]是否为回文串。
    j为字符串下标，初值等于0
    while(下标j小于字符串的长度)
        定义i为字符串子串的开始索引
        while(字符串子串的开始索引小于j加1)
            if (若字符串下标为i的数和下标为j的数相等，并且（j减去i小于2\xa0或者\xa0s[i+1, ,j-1]是回文串）)
                字符串s[i, ,j]为回文子串
                if (开始索引为0)
                    0到j位置的子串不需要进行切割，自身就是回文子串。
                else:
                    0到j位置的子串的最小分割次数等于自身和上一回文串位置的切割次数加1中的最小值。
            else:
            开始索引向后移动一位
        下标j向后移动一位
    output:  返回将整个数组作为子串时的最小分割次数
