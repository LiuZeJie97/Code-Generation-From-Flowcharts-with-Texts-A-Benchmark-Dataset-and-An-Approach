def longestValidParentheses(self, s):
    初始化匹配索引数组res=[]和栈stack=[]
    初始化索引index的值为0，为字符串s的下标
    while(括号索引没有越界)
        if (若栈不为空且字符串中下标为i的元素等于右括号)
            将匹配的左括号的索引出栈，并加入匹配索引数组
            将匹配的右括号索引加入匹配索引数组
        else:
        if (若索引在字符串中指向的元素等于左括号)
            将索引加入栈
        else:
        括号索引自增1
    将匹配索引数组排序。
    初始化max_len等于0，用于记录匹配索引数组的最长连续子序列的长度
    index等于0，记录匹配索引数组的下标
    while(下标小于匹配索引数组的长度减一)
        令tmp等于下标，用于保存最长连续子序列的左界
        while(index小于匹配索引数组的长度减一 且 该数组下一位和当前位差等于1：)
            下标右移一位
        如果索引index减tmp加1大于当前最长连续子序列的长度，则更新
        下标右移一位
    output:  返回最长连续子序列的长度
