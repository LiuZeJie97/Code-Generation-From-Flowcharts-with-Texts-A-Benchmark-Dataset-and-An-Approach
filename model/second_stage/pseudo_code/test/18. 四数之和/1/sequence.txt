def fourSum(self, LIST, target):
    quadruplets等于空列表，用于记录找到满足全部条件且不重复的四元组
    if (数组 LIST 不存在或长度小于4)
        output:  返回空列表
    else:
        对数组从小到大排序
        数组长度为length
        定义数组的下标i等于0
        while(数组LIST的下标小于数组长度减去3)
            if (下标i大于0且数组下标为i的元素等于数组下标为i减去1的元素)
            else:
                if (数组下标为i至i加3的4个元素的和大于目标值target)
                    break
                if (数组下标为i的元素和位于数组末尾的三个元素小于目标值)
                else:
                    j为数组下标，初值等于i加1
                    while(数组LIST的下标小于数组长度减去2)
                        if (j位于i+1的右侧，且数组中下标为j的元素等于数组中下标为j减去1的元素)
                        else:
                            if (数组中下标为i的元素加上下标为j至j加2的元素的和大于目标值)
                                break
                            if (数组下标为i的元素，下标为j的元素，和位于数组末尾的2个元素小于目标值)
                            else:
                                定义左指针left，右指针right，初值分别为j加1和数组长度减去1
                                while(左指针小于右指针)
                                    定义当前元素和total，初值等于左指针和右指针指向的元素和下标为i和j的元素的加和
                                    if (当前元素和等于目标值target)
                                        找到满足全部条件且不重复的四元组
                                        while(左指针位于右指针左侧，且左指针指向的元素和其右侧的元素相等)
                                            左指针右移1个单位
                                        左指针右移1个单位
                                        while(左指针位于右指针左侧，且右指针指向的元素和其左侧的元素相等)
                                            右指针左移1个单位
                                        右指针左移1个单位
                                        continue
                                    else:
                                        if (当前元素和小于目标值)
                                            左指针右移1个单位
                                            continue
                                        else:
                                            右指针左移1个单位
                                            continue
                        数组下标j向右移动一个单位
            下标i向右移动
        output:  返回满足下述全部条件且不重复的四元组
