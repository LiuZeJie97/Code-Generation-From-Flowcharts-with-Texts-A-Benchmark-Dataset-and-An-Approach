def minTaps(self, n, ranges):
    初始化数组prev
    定义变量i等于0
    while(i小于花园长度n加一)
        将i添加进prev中
        令i加一
    定义变量i等于0
    while(i小于花园长度n加一)
        若点i处的水龙头与ranges[i]的差值大于0，变量l等于该差值，否则l等于0
        若点r处的水龙头与ranges[i]的和值大于花园长度，变量r等于该和值，否则r等于0
        数组prev中下标为r的元素等于它与l之间的最小值
        令i加一
    定义变量BIG等于2的30次方
    初始化数组dp，其长度等于花园长度加一，数组元素初值均为BIG
    数组dp中第一项元素等于0
    定义变量i等于0
    while(i小于花园长度加一)
        定义变量j等于数组prev中下标为i的元素
        while(j小于i)
            if (数组dp中下标为j的元素不等于BIG)
                数组dp中下标为i的元素等于它与下标为j的元素加一之间的最小值
            else:
            令j加一
        令i加一
    output:  如果数组dp中下标为n的元素不等于BIG，则返回该元素，否则返回-1
