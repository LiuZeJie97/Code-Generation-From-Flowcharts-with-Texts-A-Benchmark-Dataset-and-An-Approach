def findNumberOfLIS(self, a):
    n为数组a的长度，变量max_len用于记录最大长度，变量ans用于记录最长递增子序列的个数，其初值均为0
    定义初值均为0的长度为n的数组dp，dp[i]表示以数组a中以第i个数结尾最长上升子序列的长度
    定义初值均为0的长度为n的数组cnt，cnt[i]表示以数组a中以第i个数结尾最长上升子序列的个数
    i初值为0，为数组下标，x为初值为数组a第一项元素，表示数组中当前下标对应的元素
    while(对该数组进行遍历)
        数组a中以第i个数结尾最长上升子序列的长度为1
        上述数组中以第i个数结尾最长上升子序列的个数为1
        j为数组下标
        while(数组下标小于i)
            if (数组a中当前元素大于下标为j的元素)
                if (数组a中以第j个数结尾最长上升子序列的长度加一大于以第i个数结尾最长上升子序列的长度)
                    数组中以第i个数结尾最长上升子序列的长度等于以第j个数结尾最长上升子序列的长度加一
                    数组中以第i个数结尾最长上升子序列的个数等于以第j个数结尾最长上升子序列的个数
                else:
                    if (数组a中以第j个数结尾最长上升子序列的长度加一等于以第i个数结尾最长上升子序列的长度)
                        数组中以第i个数结尾最长上升子序列的个数加上以第j个数结尾最长上升子序列的个数
                    else:
            else:
            数组下标加一
        if (数组a中以第i个数结尾最长上升子序列的长度大于最大长度)
            最大长度等于该长度
            将最长递增子序列的个数更新为数组中以第i个数结尾最长上升子序列的个数
        else:
            if (这两个长度相等)
                最长递增子序列的个数加上数组中以第i个数结尾最长上升子序列的个数
            else:
        更新数组下标及其对应的元素
    output:  返回最长递增子序列的个数
