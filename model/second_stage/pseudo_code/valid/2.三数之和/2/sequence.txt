def threeSum(self, nums):
    n为数组nums的长度
    if (数组为空或者数组长度小于3)
        output:  返回空数组
    else:
        对数组从小到大排序
        使用数组res保存解
        i为当前元素在数组中的下标，i等于0
        while(i小于数组长度)
            if (当前元素大于0)
                output:  返回所有解
            if (i大于0且当前元素等于当前元素的前一个元素)
            else:
                令左指针L等于前元素在数组中的下标i加1，右指针R等于数组长度减去1
                while(左指针小于右指针)
                    if (当前元素nums[i]和左指针L和右指针R指向的元素的加和等于0时)
                        找到一个解，保存当前元素和左指针和右指针
                        while(左指针位于右指针左侧，且左指针指向的元素和其右侧的元素相等)
                            左指针右移1个单位
                        while(左指针位于右指针左侧，且右指针指向的元素和其左侧的元素相等)
                            右指针左移1个单位
                        将左指针右移一个单位，右指针左移一个单位
                        continue
                    else:
                        if (当前元素，左指针L和右指针R指向的元素的加和大于0)
                            右指针左移一个单位
                            continue
                        else:
                            左指针右移一个单位
                            continue
            i自增1
        output:  返回所有解
