def minimumDeleteSum(self, s1, s2):
    定义行数为字符串s1的长度加一列数为字符串s2的长度加一的二维数组dp，其初值均为0，dp[i][j]表示s1[i:]与s2[j:]达到相等所需删除字符的值
    i为数组下标，初值为字符串s1的长度减一
    while(当i大于-1)
        s1[i:]与空字符串达到相等所需删除字符的值等于s1[i+1:]与空字符串达到相等所需删除字符的值加上字符串s1下标为i的字符的Unicode编码值
        将i的值更新为i减一
    j为数组下标，初值为字符串s2的长度减一
    while(当j大于-1)
        空字符串与s2[j:]达到相等所需删除字符的值等于空字符串与s2[j+1:]达到相等所需删除字符的值加上字符串s2下标为j的字符的Unicode编码值
        将j的值更新为j减一
    i为数组下标，初值为字符串s1的长度减一
    while(当i大于-1)
        j为数组下标，初值为字符串s2的长度减一
        while(当j大于-1)
            if (当字符串s1中下标为i的字符与字符串s2中下标为j的字符相同)
                s1[i:]与s2[j:]达到相等所需删除字符的值等于s1[i+1:]与s2[j+1:]达到相等所需删除字符的值
            else:
                计算s1[i+1:]与s2[j:]达到相等所需删除字符的值与字符串s1中下标为i的字符的Unicode值的和，s1[i:]与s2[j+1:]达到相等所需删除字符的值与字符串s2中下标为j的字符的Unicode值的和，s1[i:]与s2[j:]达到相等所需删除字符的值等于它们之间的最大值
            将j的值更新为j减一
        将i的值更新为i减一
    output:  返回s1与s2达到相等所需删除字符的值
