def updateMatrix(self, matrix):
    m为数组matrix的长度，n为数组matrix[0]的长度
    定义m行n列的二维数组dist，其初值均为10的9次方，dist[i][j]表示位置(i,j)到最近的0的距离
    i为数组下标
    while(i小于m)
        j为数组下标
        while(j小于n)
            if (位置(i,j)的元素为0)
                位置(i,j)到最近的0的距离等于0
            else:
            令j加一
        令i加一
    i为数组下标
    while(i小于m)
        j为数组下标
        while(j小于n)
            if (i减一大于等于0)
                位置(i,j)到最近的0的距离等于它与位置(i-1,j)到最近的0的距离加一之间的最小值
            else:
            if (j减一大于等于0)
                位置(i,j)到最近的0的距离等于它与位置(i,j-1)到最近的0的距离加一之间的最小值
            else:
            令j加一
        令i加一
    i为数组下标，初值为m-1
    while(i大于-1)
        j为数组下标
        while(j小于n)
            if (i加一小于m)
                位置(i,j)到最近的0的距离等于它与位置(i+1,j)到最近的0的距离加一之间的最小值
            else:
            if (j减一大于等于0)
                位置(i,j)到最近的0的距离等于它与位置(i,j-1)到最近的0的距离加一之间的最小值
            else:
            令j加一
        令i减一
    i为数组下标
    while(i小于m)
        j为数组下标，初值为n-1
        while(j大于-1)
            if (i减一大于等于0)
                位置(i,j)到最近的0的距离等于它与位置(i-1,j)到最近的0的距离加一之间的最小值
            else:
            if (j加一小于n)
                位置(i,j)到最近的0的距离等于它与位置(i,j+1)到最近的0的距离加一之间的最小值
            else:
            令j减一
        令i加一
    i为数组下标，初值为m-1
    while(i大于-1)
        j为数组下标，初值为n-1
        while(j大于-1)
            if (i加一小于m)
                位置(i,j)到最近的0的距离等于它与位置(i+1,j)到最近的0的距离加一之间的最小值
            else:
            if (j加一小于n)
                位置(i,j)到最近的0的距离等于它与位置(i,j+1)到最近的0的距离加一之间的最小值
            else:
            令j减一
        令i减一
    output:  返回二维数组dist
