def numDistinct(self, s, t):
    初始化s,t的长度分别为m,n
    if (s的长度小于t的长度)
        output:  s的子序列中t出现的个数为0
    else:
        初始化dp为的全零矩阵，第一维长度等于s的长度加1，第二维长度等于t的长度加1。其中dp[i][j]表示在s[i:]的子序列中t[j:]出现的个数。
        初始化全零矩阵第1维下标i等于0
        while(全零矩阵第1维下标没有越界)
            在s[i:]的子序列中t[n:]出现的个数等于1
            全零矩阵第1维下标加一
        定义元素i为dp第1维的下标
        while(dp第1维的下标大于-1)
            定义元素j为dp第2维的下标
            while(dp第2维的下标大于-1)
                if (s中下标为i的字符等于t中下标为j的字符)
                    s[i:]的子序列中t[j:]出现的个数等于dp[i-1][j-1]和dp[i][j-1]的和
                else:
                    s[i:]的子序列中t[j:]出现的个数等于dp[i + 1][j]
                下标j减去1
            下标i减去1
        output:  返回在s的子序列中t出现的个数。
