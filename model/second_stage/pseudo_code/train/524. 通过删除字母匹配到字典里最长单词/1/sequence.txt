def findLongestWord(self, s, dictionary):
    m为字符串s的长度
    定义m+1行26列的二维数组f，其初值均为字符串s的长度，f[i][j]表示字符串s中下标i之后字符j第一次出现的位置
    i为数组下标，初值为字符串s的长度减一
    while(数组下标大于-1)
        j为数组下标，初值为0
        while(数组下标小于26)
            if (若字符串s中下标为i的字符的ASCII码等于j加97)
                字符串s中下标i之后字符j第一次出现的位置等于i
            else:
                字符串s中下标i之后字符j第一次出现的位置等于下标i+1之后字符j第一次出现的位置
            当前数组下标等于其自身加一
        当前数组下标等于其自身减一
    定义空字符串res
    t是字符串数组dictionary中的字符串
    while(对该字符串数组进行遍历)
        定义变量match用于记录字符串之间是否匹配，初值为True，表示匹配
        定义变量j等于0
        i为数组下标
        while(当数组下标小于字符串t的长度)
            if (求字符串t中下标为i的字符的ASCII码减去97的值，如果字符串s中下标j之后上述计算结果对应的字符第一次出现的位置等于字符串s的长度)
                字符串之间不匹配
                break
            求字符串t中下标为i的字符的Unicode数值减去97对应的值，将j的值更新为字符串s中下标j之后上述计算结果对应的字符第一次出现的位置加一
            数组下标加一
        if (如果字符串之间匹配)
            if (字符串t的长度大于字符串res的长度或这两个长度相等且字符串t小于字符串res)
                令字符串res等于字符串t
            else:
        else:
        当前遍历字符串等于字符串数组中的下一个字符串
    output:  返回字符串res
