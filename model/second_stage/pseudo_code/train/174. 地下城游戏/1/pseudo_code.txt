NSpace
0
1
1
1
1
1
1
2
2
1
1
2
2
1
1
2
2
3
3
2
1

GUID
None
op1693
op1695
op1697
op1699
op1701
cond1704
op1711
op1
op1715
cond1718
op1725
op2
op1729
cond1732
op1751
cond1754
op1761
op4
op3
io1770

Str
def calculateMinimumHP(self, dungeon):@
m用于记录地下城dungeon的行数@
n用于记录地下城的列数@
初始化dp，行数等于为dungeon的行数，列数等于地下城的列数，是个全零二维数组，dp[i][j]表示到达地下城第i行第j列的房间所需的最小生命值。@
初始化dp[m-1][n-1]，若位于第m1行第n1列房间的数值小于0，则到达此房间的最小生命值为1减去该房间的数值，否则为1。@
定义i为dp第二维的下标，初始值为n-2@
while(判断i是否大于-1)@
计算到达第m-1行第j列的房间的所需最小生命值，如果dp[i+1][-1]减去dungeon[i][-1]的计算结果大于1，则计算结果即为最小生命值，否则，最小生命值为1。@
第二维的下标向左移动1个单位@
定义i为dp第一维的下标，初始值为n-2@
while(判断下标是否越界)@
计算到达第i行第n-1列的房间的所需最小生命值，如果dp[i+1][-1]减去dungeon[i][-1]的计算结果大于1，则取计算结果为最小生命值，否则，最小生命值为1。@
第一维的下标向左移动1个单位@
定义下标i，初始值为m-2@
while(判断下标是否大于-1)@
定义下标j，初始值为n-2@
while(判断下标是否大于-1)@
找出dp[i+1][j]和dp[i][j+1]中的较小者，将较小者减去dungeon[i][j]，如果结果大于1，则取该结果为最小生命值，否则，最小生命值为1。@
下标j减去1@
下标i减去1@
output:  返回到达地下城第0行第0列的房间所需的最小生命值@

Type
Function
Effect
Effect
Effect
Effect
Effect
While
Effect
Effect
Effect
While
Effect
Effect
Effect
While
Effect
While
Effect
Effect
Effect
Effect
