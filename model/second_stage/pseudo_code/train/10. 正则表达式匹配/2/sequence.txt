def isMatch(self, s, p):
    len_s和len_n分别为字符串s和一个字符规律p的长度
    用 f[m][n] 表示字符串的前i个字符与字符规律中的前j个字符是否能够匹配，第一维长度为字符串长度加1.第二维长度等于字符规律的长度加1，初始时全部置为False
    字符串前0个字符与字符规律中的前0个字符一定能够匹配
    m为字符串的下标，初值等于0
    while(字符串的下标小于字符串长度加1)
        n为字符规律的下标，初值等于1
        while(字符规律的下标小于字符规律的长度加1)
            定义匹配标记matches
            if (字符规律p的前一位等于'*')
                只要字符串的前m个字符与字符规律中的前n个字符能够匹配，或者字符串的前m个字符与字符规律中的前n-2个字符能够匹配，f[m][n]就等于True
                if (字符串s的下标m等于0)
                    匹配标记等于Flase,表示字符串第[m]位和字符规律[n - 1]位不匹配
                else:
                    if (字符规律中的下标为n-2的字符等于'.')
                        匹配标记等于True，表示字符串第[m]位和字符规律第[n - 1]位匹配
                    else:
                        字符串第[m]位和字符规律[n-1]位是否匹配取决于字符串[m-1]位和字符规律[n-2]位是否相等
                if (匹配标记为True)
                    如果字符串的前i-1个字符与 字符规律中的前j个字符能够匹配，则f[m][n]等于True，否则，f[m][n]保持不变
                else:
            else:
                if (字符串的下标等于0)
                    匹配标记等于Flase,表示字符串第[m]位和字符规律第[n]位不匹配
                else:
                    if (字符规律中的下标为j-1的字符等于'.')
                        匹配标记等于True，表示字符串第[m]位和字符规律第[n]位匹配
                    else:
                        字符串[m]和字符规律第[n]位是否匹配取决于字符串第[m-1]位和字符规律第[n-1]位是否相等
                if (匹配标记为True)
                    如果字符串的前m-1个字符与字符规律中的前n-1个字符能够匹配，则f[m][n]等于True，否则，f[m][n]保持不变
                else:
            字符规律的下标向右移动一个单位
        字符串的下标向右移动一个单位
    output:  返回字符串的前m个字符与字符规律中的前n个字符是否能够匹配
