def intToRoman(self, num):
    初始化词典numtochar={1:'I',4:'IV',5:'V',9:'IX',10:'X',40:'XL',50:'L',90:'XC',100:'C',400:'CD',500:'D',900:'CM',1000:'M' }，key为数值，value为数值对应的字符。
    res记录转换后的罗马数字，初值为空字符串
    对于词典中的key，我们使用贪心策略，将key从大到小排序，将排序结果保存在词典中
    初始化数值key，初值为词典中最大的key
    while(对于排序结果中的每一个数值)
        if (整数num等于0)
            break
        定义tmp等于整数整除当前的数值，表示需要使用当前数值对应字符的次数
        if (使用0次)
        else:
            记录转换后的罗马数字等于其自身拼接上 当前数值key所对应的字符乘上需要使用该字符的次数
            更新整数num等于其自身减去当前数值所乘上需要使用该字符的次数
        更新当前的数值
    output:  返回转换后的罗马数字
